The super keyword in Java is a reference variable which is used to refer immediate parent class object.

super can be used to refer immediate parent class
1.access parent class instance variable.

2.invoke parent class method.
 
3. invoke parent class constructor.

ex 1 :

class Animal{  
String color="white";  
}  
class Dog extends Animal{  
String color="black";  
void printColor(){  
System.out.println(color);//prints color of Dog class  
System.out.println(super.color);//prints color of Animal class  
}  
}  
class TestSuper1{  
public static void main(String args[]){  
Dog d=new Dog();  
d.printColor();  
}}  


ex 2: 

class Animal{  
void eat(){System.out.println("eating...");}  
}  
class Dog extends Animal{  
void eat(){System.out.println("eating bread...");}  
void bark(){System.out.println("barking...");}  
void work(){  
super.eat();  
bark();  
}  
}  
class TestSuper2{  
public static void main(String args[]){  
Dog d=new Dog();  
d.work();  
}}

op

eating...
barking...
  

ex 3:

class Animal{  
Animal(){System.out.println("animal is created");}  
}  
class Dog extends Animal{  
Dog(){  
super();  
System.out.println("dog is created");  
}  
}  
class TestSuper3{  
public static void main(String args[]){  
Dog d=new Dog();  
}} 

op

animal is created
dog is created


even if super is not there parent class constructor is always inherited

ex

class Animal{  
Animal(){System.out.println("animal is created");}  
}  
class Dog extends Animal{  

}  
class TestSuper4{  
public static void main(String args[]){  
Dog d=new Dog();  
}}  

op
animal is created